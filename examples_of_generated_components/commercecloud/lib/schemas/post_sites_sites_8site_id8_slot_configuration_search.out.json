{
	"description": "Document representing a slot configuration search result.",
	"properties": {
		"count": {
			"description": "The number of returned documents.",
			"format": "int32",
			"type": "integer"
		},
		"data": {
			"items": {
				"type": "object"
			},
			"type": "array"
		},
		"expand": {
			"description": "The list of expands set for the search request. Expands are optional.",
			"items": {
				"type": "string"
			},
			"type": "array"
		},
		"hits": {
			"description": "The sorted array of search hits. This array can be empty.",
			"items": {
				"description": "Document representing a slot configuration.",
				"properties": {
					"assignment_information": {
						"properties": {
							"abtest_id": {
								"description": "If there is only one assignment, and that assignment is an A/B test segment, the id of the A/B test the segment\n belongs to. Otherwise, empty.",
								"type": "string"
							},
							"abtest_segment_id": {
								"description": "If there is only one assignment, and that assignment is an A/B test segment, the id of the A/B test segment.\n Otherwise, empty.",
								"type": "string"
							},
							"active": {
								"description": "true if the individual assignment or the multiple assignments are currently active.",
								"type": "boolean"
							},
							"active_abtest_assignments": {
								"description": "A list of currently active A/B tests this is assigned to.",
								"items": {
									"properties": {
										"abtest_description": {
											"type": "string"
										},
										"abtest_id": {
											"type": "string"
										},
										"enabled": {
											"type": "boolean"
										},
										"schedule": {
											"description": "Document representing a time schedule for slots.",
											"properties": {
												"end_date": {
													"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												},
												"recurrence": {
													"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
													"properties": {
														"day_of_week": {
															"description": "The days of week for recurrence.",
															"enum": [
																"monday",
																"tuesday",
																"wednesday",
																"thursday",
																"friday",
																"saturday",
																"sunday"
															],
															"items": {
																"enum": [
																	"monday",
																	"tuesday",
																	"wednesday",
																	"thursday",
																	"friday",
																	"saturday",
																	"sunday"
																],
																"type": "string"
															},
															"type": "array"
														},
														"time_of_day": {
															"description": "The time of the day for recurrence.",
															"properties": {
																"time_from": {
																	"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																},
																"time_to": {
																	"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																}
															}
														}
													}
												},
												"start_date": {
													"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												}
											}
										},
										"segment_description": {
											"type": "string"
										},
										"segment_id": {
											"type": "string"
										}
									}
								},
								"type": "array"
							},
							"active_campaign_assignments": {
								"description": "A list of currently active campaigns this is assigned to.",
								"items": {
									"description": "Document representing a slot_configuration_campaign_assignment",
									"properties": {
										"campaign": {
											"description": "The campaign.",
											"properties": {
												"campaign_id": {
													"description": "The ID of the campaign.",
													"x-label": {
														"default": "ID"
													},
													"maxLength": 256,
													"minLength": 1,
													"type": "string"
												},
												"coupons": {
													"description": "The array of assigned coupon IDs, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"creation_date": {
													"description": "Returns the value of attribute 'creationDate'.",
													"format": "date-time",
													"x-label": {
														"default": "Creation Date"
													},
													"type": "string"
												},
												"customer_groups": {
													"description": "The array of assigned customer groups, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"description": {
													"description": "The description of the campaign.",
													"format": "text",
													"x-label": {
														"default": "Description"
													},
													"maxLength": 4000,
													"type": "string"
												},
												"enabled": {
													"description": "The enabled flag for campaign.",
													"type": "boolean"
												},
												"end_date": {
													"description": "The date that the Scenario ends",
													"format": "date-time",
													"x-label": {
														"default": "End Date"
													},
													"type": "string"
												},
												"last_modified": {
													"description": "Returns the value of attribute 'lastModified'.",
													"format": "date-time",
													"x-label": {
														"default": "Last Modified"
													},
													"type": "string"
												},
												"link": {
													"description": "link for convenience",
													"type": "string"
												},
												"source_code_groups": {
													"description": "The array of assigned source code groups, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"start_date": {
													"description": "The date that the Scenario begins",
													"format": "date-time",
													"x-label": {
														"default": "Start Date"
													},
													"type": "string"
												}
											}
										},
										"campaign_id": {
											"description": "The id of the campaign that has the slot configuration assigned to it.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string"
										},
										"context": {
											"description": "The slot context.",
											"enum": [
												"global",
												"category",
												"folder"
											],
											"type": "string",
											"required": true
										},
										"customer_groups": {
											"description": "The list of customer groups.",
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"description": {
											"description": "The description of the slot configuration.",
											"maxLength": 4000,
											"type": "string"
										},
										"enabled": {
											"description": "True if the assignment resource is enabled",
											"type": "boolean"
										},
										"link": {
											"description": "The URL to the slot configuration-campaign assignment.",
											"type": "string"
										},
										"rank": {
											"description": "The rank of the slot confiuration-campaign assignment.\n This is different than the rank of the slot configuration.",
											"format": "int32",
											"minimum": 1,
											"type": "integer"
										},
										"schedule": {
											"description": "The schedule of the assignment resource",
											"properties": {
												"end_date": {
													"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												},
												"recurrence": {
													"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
													"properties": {
														"day_of_week": {
															"description": "The days of week for recurrence.",
															"enum": [
																"monday",
																"tuesday",
																"wednesday",
																"thursday",
																"friday",
																"saturday",
																"sunday"
															],
															"items": {
																"enum": [
																	"monday",
																	"tuesday",
																	"wednesday",
																	"thursday",
																	"friday",
																	"saturday",
																	"sunday"
																],
																"type": "string"
															},
															"type": "array"
														},
														"time_of_day": {
															"description": "The time of the day for recurrence.",
															"properties": {
																"time_from": {
																	"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																},
																"time_to": {
																	"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																}
															}
														}
													}
												},
												"start_date": {
													"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												}
											}
										},
										"slot_configuration": {
											"description": "The slotConfiguration"
										},
										"slot_configuration_id": {
											"description": "The ID of the slot configuration.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string",
											"required": true
										},
										"slot_configuration_uuid": {
											"description": "The UUID of the slot configuration.",
											"maxLength": 28,
											"type": "string"
										},
										"slot_context_id": {
											"description": "The ID of the slot's context, for example, the category ID for a slot with category context.",
											"maxLength": 256,
											"type": "string"
										},
										"slot_id": {
											"description": "The ID of the slot.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string",
											"required": true
										}
									}
								},
								"type": "array"
							},
							"campaign_id": {
								"description": "If there is only one assignment, and that assignment is a campaign, the id of the campaign. Otherwise, empty.",
								"type": "string"
							},
							"enabled": {
								"type": "boolean"
							},
							"end_date": {
								"description": "The end date of the container of the assignment (a Campaign or ABTest). If schedule_type is\n schedule_type : \"multiple\" or schedule_type : \"none\", then then result will be null. Also, a null\n date will also return null.",
								"format": "date-time",
								"type": "string"
							},
							"schedule": {
								"description": "The schedule of the assignment (a Campaign or ABTest). If schedule_type is\n schedule_type : \"multiple\" or schedule_type : \"none\", then then result will be null.",
								"properties": {
									"end_date": {
										"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
										"format": "date-time",
										"type": "string"
									},
									"recurrence": {
										"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
										"properties": {
											"day_of_week": {
												"description": "The days of week for recurrence.",
												"enum": [
													"monday",
													"tuesday",
													"wednesday",
													"thursday",
													"friday",
													"saturday",
													"sunday"
												],
												"items": {
													"enum": [
														"monday",
														"tuesday",
														"wednesday",
														"thursday",
														"friday",
														"saturday",
														"sunday"
													],
													"type": "string"
												},
												"type": "array"
											},
											"time_of_day": {
												"description": "The time of the day for recurrence.",
												"properties": {
													"time_from": {
														"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
														"format": "time",
														"type": "string"
													},
													"time_to": {
														"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
														"format": "time",
														"type": "string"
													}
												}
											}
										}
									},
									"start_date": {
										"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
										"format": "date-time",
										"type": "string"
									}
								}
							},
							"schedule_type": {
								"description": "If there is only one active assignment, or no active assignments and one upcoming assignment, this is that type\n of assignment (schedule_type : \"campaign\" or schedule_type : \"abtest\"). If there are no\n assignments, it will be schedule_type : \"none\", otherwise, schedule_type : \"multiple\".",
								"enum": [
									"none",
									"campaign",
									"abtest",
									"multiple"
								],
								"type": "string"
							},
							"start_date": {
								"description": "The start date of the container of the assignment (a Campaign or ABTest). If schedule_type is\n schedule_type : \"multiple\" or schedule_type : \"none\", then then result will be null. Also, a null\n date will also return null.",
								"format": "date-time",
								"type": "string"
							},
							"upcoming_abtest_assignments": {
								"description": "A list of upcoming A/B tests this is assigned to.",
								"items": {
									"properties": {
										"abtest_description": {
											"type": "string"
										},
										"abtest_id": {
											"type": "string"
										},
										"enabled": {
											"type": "boolean"
										},
										"schedule": {
											"description": "Document representing a time schedule for slots.",
											"properties": {
												"end_date": {
													"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												},
												"recurrence": {
													"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
													"properties": {
														"day_of_week": {
															"description": "The days of week for recurrence.",
															"enum": [
																"monday",
																"tuesday",
																"wednesday",
																"thursday",
																"friday",
																"saturday",
																"sunday"
															],
															"items": {
																"enum": [
																	"monday",
																	"tuesday",
																	"wednesday",
																	"thursday",
																	"friday",
																	"saturday",
																	"sunday"
																],
																"type": "string"
															},
															"type": "array"
														},
														"time_of_day": {
															"description": "The time of the day for recurrence.",
															"properties": {
																"time_from": {
																	"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																},
																"time_to": {
																	"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																}
															}
														}
													}
												},
												"start_date": {
													"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												}
											}
										},
										"segment_description": {
											"type": "string"
										},
										"segment_id": {
											"type": "string"
										}
									}
								},
								"type": "array"
							},
							"upcoming_campaign_assignments": {
								"description": "A list of upcoming campaigns this is assigned to.",
								"items": {
									"description": "Document representing a slot_configuration_campaign_assignment",
									"properties": {
										"campaign": {
											"description": "The campaign.",
											"properties": {
												"campaign_id": {
													"description": "The ID of the campaign.",
													"x-label": {
														"default": "ID"
													},
													"maxLength": 256,
													"minLength": 1,
													"type": "string"
												},
												"coupons": {
													"description": "The array of assigned coupon IDs, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"creation_date": {
													"description": "Returns the value of attribute 'creationDate'.",
													"format": "date-time",
													"x-label": {
														"default": "Creation Date"
													},
													"type": "string"
												},
												"customer_groups": {
													"description": "The array of assigned customer groups, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"description": {
													"description": "The description of the campaign.",
													"format": "text",
													"x-label": {
														"default": "Description"
													},
													"maxLength": 4000,
													"type": "string"
												},
												"enabled": {
													"description": "The enabled flag for campaign.",
													"type": "boolean"
												},
												"end_date": {
													"description": "The date that the Scenario ends",
													"format": "date-time",
													"x-label": {
														"default": "End Date"
													},
													"type": "string"
												},
												"last_modified": {
													"description": "Returns the value of attribute 'lastModified'.",
													"format": "date-time",
													"x-label": {
														"default": "Last Modified"
													},
													"type": "string"
												},
												"link": {
													"description": "link for convenience",
													"type": "string"
												},
												"source_code_groups": {
													"description": "The array of assigned source code groups, not sorted",
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"start_date": {
													"description": "The date that the Scenario begins",
													"format": "date-time",
													"x-label": {
														"default": "Start Date"
													},
													"type": "string"
												}
											}
										},
										"campaign_id": {
											"description": "The id of the campaign that has the slot configuration assigned to it.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string"
										},
										"context": {
											"description": "The slot context.",
											"enum": [
												"global",
												"category",
												"folder"
											],
											"type": "string",
											"required": true
										},
										"customer_groups": {
											"description": "The list of customer groups.",
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"description": {
											"description": "The description of the slot configuration.",
											"maxLength": 4000,
											"type": "string"
										},
										"enabled": {
											"description": "True if the assignment resource is enabled",
											"type": "boolean"
										},
										"link": {
											"description": "The URL to the slot configuration-campaign assignment.",
											"type": "string"
										},
										"rank": {
											"description": "The rank of the slot confiuration-campaign assignment.\n This is different than the rank of the slot configuration.",
											"format": "int32",
											"minimum": 1,
											"type": "integer"
										},
										"schedule": {
											"description": "The schedule of the assignment resource",
											"properties": {
												"end_date": {
													"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												},
												"recurrence": {
													"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
													"properties": {
														"day_of_week": {
															"description": "The days of week for recurrence.",
															"enum": [
																"monday",
																"tuesday",
																"wednesday",
																"thursday",
																"friday",
																"saturday",
																"sunday"
															],
															"items": {
																"enum": [
																	"monday",
																	"tuesday",
																	"wednesday",
																	"thursday",
																	"friday",
																	"saturday",
																	"sunday"
																],
																"type": "string"
															},
															"type": "array"
														},
														"time_of_day": {
															"description": "The time of the day for recurrence.",
															"properties": {
																"time_from": {
																	"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																},
																"time_to": {
																	"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
																	"format": "time",
																	"type": "string"
																}
															}
														}
													}
												},
												"start_date": {
													"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
													"format": "date-time",
													"type": "string"
												}
											}
										},
										"slot_configuration": {
											"description": "The slotConfiguration"
										},
										"slot_configuration_id": {
											"description": "The ID of the slot configuration.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string",
											"required": true
										},
										"slot_configuration_uuid": {
											"description": "The UUID of the slot configuration.",
											"maxLength": 28,
											"type": "string"
										},
										"slot_context_id": {
											"description": "The ID of the slot's context, for example, the category ID for a slot with category context.",
											"maxLength": 256,
											"type": "string"
										},
										"slot_id": {
											"description": "The ID of the slot.",
											"maxLength": 256,
											"minLength": 1,
											"type": "string",
											"required": true
										}
									}
								},
								"type": "array"
							}
						},
						"description": "Information about the assignments and assignment schedules of this slot configuration"
					},
					"callout_msg": {
						"additionalProperties": {
							"properties": {
								"markup": {
									"description": "The rendered HTML",
									"type": "string"
								},
								"source": {
									"description": "The raw markup text",
									"type": "string"
								}
							}
						},
						"description": "The call out message.",
						"format": "localized",
						"x-label": {
							"default": "Callout"
						},
						"type": "object"
					},
					"configuration_id": {
						"description": "The id of this configuration.",
						"x-label": {
							"default": "ID"
						},
						"maxLength": 256,
						"minLength": 1,
						"type": "string"
					},
					"context": {
						"description": "The context of the slot. Ignored in input documents.",
						"enum": [
							"global",
							"category",
							"folder"
						],
						"type": "string"
					},
					"context_id": {
						"description": "When the context is category, this is a category_id; when\n the context is folder, this is a folder_id; and when the\n context is global, this is obsolete. This is ignored in input documents.",
						"type": "string"
					},
					"creation_date": {
						"description": "Returns the value of attribute 'creationDate'.",
						"format": "date-time",
						"x-label": {
							"default": "Creation Date"
						},
						"type": "string"
					},
					"customer_groups": {
						"description": "The customer groups ids.",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"default": {
						"description": "A flag indicating whether the configuration is the default one for the slot.",
						"type": "boolean"
					},
					"description": {
						"description": "The configuration description.",
						"maxLength": 4000,
						"type": "string"
					},
					"enabled": {
						"description": "A flag indicating whether the slot is enabled.",
						"type": "boolean"
					},
					"last_modified": {
						"description": "Returns the value of attribute 'lastModified'.",
						"format": "date-time",
						"x-label": {
							"default": "Last Modified"
						},
						"type": "string"
					},
					"link": {
						"description": "The link.",
						"type": "string"
					},
					"rank": {
						"description": "The rank of the slot configuration on its slot. This rank has nothing to do with the rank\n on any campaign-assignment, because these are completely different objects. These must be\n updated separately.",
						"enum": [
							10,
							20,
							30,
							40,
							50,
							60,
							70,
							80,
							90,
							100
						],
						"format": "int32",
						"x-label": {
							"default": "Rank"
						},
						"minimum": 1,
						"type": "integer"
					},
					"schedule": {
						"description": "The schedule for the slot.",
						"properties": {
							"end_date": {
								"description": "The date to end of validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
								"format": "date-time",
								"type": "string"
							},
							"recurrence": {
								"description": "The recurrence of the schedule by day of week and time of day. Not all schedules will support a recurrence.",
								"properties": {
									"day_of_week": {
										"description": "The days of week for recurrence.",
										"enum": [
											"monday",
											"tuesday",
											"wednesday",
											"thursday",
											"friday",
											"saturday",
											"sunday"
										],
										"items": {
											"enum": [
												"monday",
												"tuesday",
												"wednesday",
												"thursday",
												"friday",
												"saturday",
												"sunday"
											],
											"type": "string"
										},
										"type": "array"
									},
									"time_of_day": {
										"description": "The time of the day for recurrence.",
										"properties": {
											"time_from": {
												"description": "The time to start from. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
												"format": "time",
												"type": "string"
											},
											"time_to": {
												"description": "The time to end on. Time format: HH:mm:ss. Seconds\n are ignored and set to 0.",
												"format": "time",
												"type": "string"
											}
										}
									}
								}
							},
							"start_date": {
								"description": "The date to start validity. ISO8601 date time format: yyyy-MM-dd'T'HH:mm:ssZ.",
								"format": "date-time",
								"type": "string"
							}
						}
					},
					"slot_content": {
						"description": "The content of the slot.",
						"properties": {
							"body": {
								"additionalProperties": {
									"properties": {
										"markup": {
											"description": "The rendered HTML",
											"type": "string"
										},
										"source": {
											"description": "The raw markup text",
											"type": "string"
										}
									}
								},
								"description": "The HTML body (valid only for type 'html').",
								"format": "localized",
								"type": "object"
							},
							"category_ids": {
								"description": "The category ids (valid only for type 'categories').",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"content_asset_ids": {
								"description": "The content asset ids (valid only for type 'content_assets').",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"product_ids": {
								"description": "The product ids (valid only for type 'products').",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"type": {
								"description": "The type of content in the slot.",
								"enum": [
									"products",
									"categories",
									"content_assets",
									"html",
									"recommended_products"
								],
								"type": "string",
								"required": true
							}
						},
						"required": true
					},
					"slot_id": {
						"description": "The ID of the slot. Ignored in input documents.",
						"maxLength": 256,
						"minLength": 1,
						"type": "string"
					},
					"template": {
						"description": "The template.",
						"maxLength": 256,
						"type": "string"
					},
					"uuid": {
						"description": "The uuid of the slot configuration. This property cannot be written\n and is ignored in input documents.",
						"x-label": {
							"default": "UUID"
						},
						"maxLength": 28,
						"minLength": 1,
						"type": "string"
					}
				}
			},
			"type": "array"
		},
		"next": {
			"description": "The URL of the next result page.",
			"properties": {
				"count": {
					"description": "Returns the count of search hits to include in the page.",
					"format": "int32",
					"type": "integer"
				},
				"start": {
					"description": "Returns the zero-based index of the first search hit in the page.",
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"previous": {
			"description": "The URL of the previous result page.",
			"properties": {
				"count": {
					"description": "Returns the count of search hits to include in the page.",
					"format": "int32",
					"type": "integer"
				},
				"start": {
					"description": "Returns the zero-based index of the first search hit in the page.",
					"format": "int32",
					"type": "integer"
				}
			}
		},
		"query": {
			"description": "The query passed into the search",
			"x-sub_types": {
				"nested_query": "#/definitions/nested_query",
				"filtered_query": "#/definitions/filtered_query",
				"text_query": "#/definitions/text_query",
				"term_query": "#/definitions/term_query",
				"match_all_query": "#/definitions/match_all_query",
				"bool_query": "#/definitions/bool_query"
			}
		},
		"select": {
			"description": "The fields that you want to select.",
			"type": "string"
		},
		"sorts": {
			"description": "The list of sort clauses configured for the search request. Sort clauses are optional.",
			"items": {
				"description": "Document representing a sort request.",
				"properties": {
					"field": {
						"description": "The name of the field to sort on.",
						"type": "string"
					},
					"sort_order": {
						"description": "The sort order to be applied when sorting. When omitted, the default sort order (ASC) is used.",
						"enum": [
							"asc",
							"desc"
						],
						"type": "string"
					}
				}
			},
			"type": "array"
		},
		"start": {
			"description": "The zero-based index of the first search hit to include in the result.",
			"format": "int32",
			"minimum": 0,
			"type": "integer"
		},
		"total": {
			"description": "The total number of documents.",
			"format": "int32",
			"type": "integer"
		}
	}
}